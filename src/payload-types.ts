/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'user-fitness': UserFitness;
    attendance: Attendance;
    'gym-counts': GymCount;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'user-fitness': UserFitnessSelect<false> | UserFitnessSelect<true>;
    attendance: AttendanceSelect<false> | AttendanceSelect<true>;
    'gym-counts': GymCountsSelect<false> | GymCountsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    home: Home;
    navbar: Navbar;
    reviews: Review;
  };
  globalsSelect: {
    home: HomeSelect<false> | HomeSelect<true>;
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  profilePicture?: (string | null) | Media;
  dob?: string | null;
  phoneNumber?: string | null;
  gender?: ('male' | 'female' | 'other') | null;
  role: 'admin' | 'trainer' | 'user';
  plan: 'essential' | 'premium' | 'elite';
  OTP?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-fitness".
 */
export interface UserFitness {
  id: string;
  user: string | User;
  goal?: ('weight_loss' | 'weight_gain' | 'muscle_building' | 'toning' | 'maintenance') | null;
  bodyMetrics?: {
    height?: number | null;
    currentWeight?: number | null;
    targetWeight?: number | null;
  };
  dailyCalories?: {
    target?: number | null;
    consumed?: number | null;
    burned?: number | null;
  };
  mealPlan?: {
    dietType?: ('vegetarian' | 'non_vegetarian' | 'vegan' | 'pescatarian') | null;
    allergies?:
      | {
          allergen?: string | null;
          id?: string | null;
        }[]
      | null;
    preferences?: string | null;
  };
  workoutPlan?: {
    frequency?: number | null;
    preferredDays?: ('monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday')[] | null;
    duration?: number | null;
    preferredTypes?: ('cardio' | 'strength' | 'yoga' | 'hiit' | 'sports')[] | null;
  };
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendance".
 */
export interface Attendance {
  id: string;
  user: string | User;
  role: 'member' | 'trainer';
  date: string;
  checkInTime?: string | null;
  checkOutTime?: string | null;
  durationMinutes?: number | null;
  status?: ('checked-in' | 'checked-out' | 'auto-closed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gym-counts".
 */
export interface GymCount {
  id: string;
  date: string;
  currentMembers?: number | null;
  currentTrainers?:
    | {
        trainer?: (string | null) | User;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'user-fitness';
        value: string | UserFitness;
      } | null)
    | ({
        relationTo: 'attendance';
        value: string | Attendance;
      } | null)
    | ({
        relationTo: 'gym-counts';
        value: string | GymCount;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  profilePicture?: T;
  dob?: T;
  phoneNumber?: T;
  gender?: T;
  role?: T;
  plan?: T;
  OTP?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-fitness_select".
 */
export interface UserFitnessSelect<T extends boolean = true> {
  user?: T;
  goal?: T;
  bodyMetrics?:
    | T
    | {
        height?: T;
        currentWeight?: T;
        targetWeight?: T;
      };
  dailyCalories?:
    | T
    | {
        target?: T;
        consumed?: T;
        burned?: T;
      };
  mealPlan?:
    | T
    | {
        dietType?: T;
        allergies?:
          | T
          | {
              allergen?: T;
              id?: T;
            };
        preferences?: T;
      };
  workoutPlan?:
    | T
    | {
        frequency?: T;
        preferredDays?: T;
        duration?: T;
        preferredTypes?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendance_select".
 */
export interface AttendanceSelect<T extends boolean = true> {
  user?: T;
  role?: T;
  date?: T;
  checkInTime?: T;
  checkOutTime?: T;
  durationMinutes?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gym-counts_select".
 */
export interface GymCountsSelect<T extends boolean = true> {
  date?: T;
  currentMembers?: T;
  currentTrainers?:
    | T
    | {
        trainer?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: string;
  heroSection: {
    backgroundImage: string | Media;
    title: string;
    subtitle?: string | null;
  };
  ctaButton1: {
    text: string;
    href: string;
  };
  ctaButton2: {
    text: string;
    href: string;
  };
  galleryImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: string;
  logo: string | Media;
  navLinks?:
    | {
        title: string;
        href: string;
        id?: string | null;
      }[]
    | null;
  ctaButton: {
    text: string;
    href: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: string;
  reviews?:
    | {
        name: string;
        email: string;
        message: string;
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  heroSection?:
    | T
    | {
        backgroundImage?: T;
        title?: T;
        subtitle?: T;
      };
  ctaButton1?:
    | T
    | {
        text?: T;
        href?: T;
      };
  ctaButton2?:
    | T
    | {
        text?: T;
        href?: T;
      };
  galleryImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  logo?: T;
  navLinks?:
    | T
    | {
        title?: T;
        href?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        text?: T;
        href?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  reviews?:
    | T
    | {
        name?: T;
        email?: T;
        message?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}